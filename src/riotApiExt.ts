///////////////////////////////////////////////
//                                           //
//                     !                     //
//   This file is automatically generated!   //
//           Do not directly edit!           //
//                                           //
///////////////////////////////////////////////

// http://www.mingweisamuel.com/riotapi-schema/tool/
// Version 909460d67267a0122544094d93120b50f8d0f5de



const SpecRiotApi = {
    championMasteryV4: {
        getAllChampionMasteries: {
            path: "/lol/champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}",
        } as MethodSpec<championMasteryV4.ChampionMasteryDTO[], { encryptedSummonerId: string } | [ string ], {}, undefined>,
        getChampionMastery: {
            path: "/lol/champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}",
        } as MethodSpec<championMasteryV4.ChampionMasteryDTO | null, { championId: long, encryptedSummonerId: string } | [ long, string ], {}, undefined>,
        getChampionMasteryScore: {
            path: "/lol/champion-mastery/v4/scores/by-summoner/{encryptedSummonerId}",
        } as MethodSpec<int, { encryptedSummonerId: string } | [ string ], {}, undefined>,
    },
    championV3: {
        getChampionInfo: {
            path: "/lol/platform/v3/champion-rotations",
        } as MethodSpec<championV3.ChampionInfo, {} | [], {}, undefined>,
    },
    clashV1: {
        getPlayersBySummoner: {
            path: "/lol/clash/v1/players/by-summoner/{summonerId}",
        } as MethodSpec<clashV1.PlayerDto[], { summonerId: string } | [ string ], {}, undefined>,
        getTeamById: {
            path: "/lol/clash/v1/teams/{teamId}",
        } as MethodSpec<clashV1.TeamDto | null, { teamId: string } | [ string ], {}, undefined>,
        getTournaments: {
            path: "/lol/clash/v1/tournaments",
        } as MethodSpec<clashV1.TournamentDto[], {} | [], {}, undefined>,
        getTournamentByTeam: {
            path: "/lol/clash/v1/tournaments/by-team/{teamId}",
        } as MethodSpec<clashV1.TournamentDto | null, { teamId: string } | [ string ], {}, undefined>,
        getTournamentById: {
            path: "/lol/clash/v1/tournaments/{tournamentId}",
        } as MethodSpec<clashV1.TournamentDto | null, { tournamentId: int } | [ int ], {}, undefined>,
    },
    leagueExpV4: {
        getLeagueEntries: {
            path: "/lol/league-exp/v4/entries/{queue}/{tier}/{division}",
        } as MethodSpec<leagueExpV4.LeagueEntryDTO[], { queue: "RANKED_SOLO_5x5" | "RANKED_TFT" | "RANKED_FLEX_SR" | "RANKED_FLEX_TT", tier: "CHALLENGER" | "GRANDMASTER" | "MASTER" | "DIAMOND" | "PLATINUM" | "GOLD" | "SILVER" | "BRONZE" | "IRON", division: "I" | "II" | "III" | "IV" } | [ "RANKED_SOLO_5x5" | "RANKED_TFT" | "RANKED_FLEX_SR" | "RANKED_FLEX_TT", "CHALLENGER" | "GRANDMASTER" | "MASTER" | "DIAMOND" | "PLATINUM" | "GOLD" | "SILVER" | "BRONZE" | "IRON", "I" | "II" | "III" | "IV" ], { page?: int | null }, undefined>,
    },
    leagueV4: {
        getChallengerLeague: {
            path: "/lol/league/v4/challengerleagues/by-queue/{queue}",
        } as MethodSpec<leagueV4.LeagueListDTO, { queue: "RANKED_SOLO_5x5" | "RANKED_FLEX_SR" | "RANKED_FLEX_TT" } | [ "RANKED_SOLO_5x5" | "RANKED_FLEX_SR" | "RANKED_FLEX_TT" ], {}, undefined>,
        getLeagueEntriesForSummoner: {
            path: "/lol/league/v4/entries/by-summoner/{encryptedSummonerId}",
        } as MethodSpec<leagueV4.LeagueEntryDTO[], { encryptedSummonerId: string } | [ string ], {}, undefined>,
        getLeagueEntries: {
            path: "/lol/league/v4/entries/{queue}/{tier}/{division}",
        } as MethodSpec<leagueV4.LeagueEntryDTO[], { division: "I" | "II" | "III" | "IV", tier: "DIAMOND" | "PLATINUM" | "GOLD" | "SILVER" | "BRONZE" | "IRON", queue: "RANKED_SOLO_5x5" | "RANKED_FLEX_SR" | "RANKED_FLEX_TT" } | [ "I" | "II" | "III" | "IV", "DIAMOND" | "PLATINUM" | "GOLD" | "SILVER" | "BRONZE" | "IRON", "RANKED_SOLO_5x5" | "RANKED_FLEX_SR" | "RANKED_FLEX_TT" ], { page?: int | null }, undefined>,
        getGrandmasterLeague: {
            path: "/lol/league/v4/grandmasterleagues/by-queue/{queue}",
        } as MethodSpec<leagueV4.LeagueListDTO, { queue: "RANKED_SOLO_5x5" | "RANKED_FLEX_SR" | "RANKED_FLEX_TT" } | [ "RANKED_SOLO_5x5" | "RANKED_FLEX_SR" | "RANKED_FLEX_TT" ], {}, undefined>,
        getLeagueById: {
            path: "/lol/league/v4/leagues/{leagueId}",
        } as MethodSpec<leagueV4.LeagueListDTO | null, { leagueId: string } | [ string ], {}, undefined>,
        getMasterLeague: {
            path: "/lol/league/v4/masterleagues/by-queue/{queue}",
        } as MethodSpec<leagueV4.LeagueListDTO, { queue: "RANKED_SOLO_5x5" | "RANKED_FLEX_SR" | "RANKED_FLEX_TT" } | [ "RANKED_SOLO_5x5" | "RANKED_FLEX_SR" | "RANKED_FLEX_TT" ], {}, undefined>,
    },
    lolStatusV3: {
        getShardData: {
            path: "/lol/status/v3/shard-data",
        } as MethodSpec<lolStatusV3.ShardStatus, {} | [], {}, undefined>,
    },
    lorRankedV1: {
        getLeaderboards: {
            path: "/lor/ranked/v1/leaderboards",
        } as MethodSpec<lorRankedV1.LeaderboardDto, {} | [], {}, undefined>,
    },
    matchV4: {
        getMatchIdsByTournamentCode: {
            path: "/lol/match/v4/matches/by-tournament-code/{tournamentCode}/ids",
        } as MethodSpec<long[], { tournamentCode: string } | [ string ], {}, undefined>,
        getMatch: {
            path: "/lol/match/v4/matches/{matchId}",
        } as MethodSpec<matchV4.MatchDto | null, { matchId: long } | [ long ], {}, undefined>,
        getMatchByTournamentCode: {
            path: "/lol/match/v4/matches/{matchId}/by-tournament-code/{tournamentCode}",
        } as MethodSpec<matchV4.MatchDto, { tournamentCode: string, matchId: long } | [ string, long ], {}, undefined>,
        getMatchlist: {
            path: "/lol/match/v4/matchlists/by-account/{encryptedAccountId}",
        } as MethodSpec<matchV4.MatchlistDto | null, { encryptedAccountId: string } | [ string ], { champion?: int[] | null, queue?: int[] | null, season?: int[] | null, endTime?: long | null, beginTime?: long | null, endIndex?: int | null, beginIndex?: int | null }, undefined>,
        getMatchTimeline: {
            path: "/lol/match/v4/timelines/by-match/{matchId}",
        } as MethodSpec<matchV4.MatchTimelineDto | null, { matchId: long } | [ long ], {}, undefined>,
    },
    spectatorV4: {
        getCurrentGameInfoBySummoner: {
            path: "/lol/spectator/v4/active-games/by-summoner/{encryptedSummonerId}",
        } as MethodSpec<spectatorV4.CurrentGameInfo | null, { encryptedSummonerId: string } | [ string ], {}, undefined>,
        getFeaturedGames: {
            path: "/lol/spectator/v4/featured-games",
        } as MethodSpec<spectatorV4.FeaturedGames, {} | [], {}, undefined>,
    },
    summonerV4: {
        getByAccountId: {
            path: "/lol/summoner/v4/summoners/by-account/{encryptedAccountId}",
        } as MethodSpec<summonerV4.SummonerDTO, { encryptedAccountId: string } | [ string ], {}, undefined>,
        getBySummonerName: {
            path: "/lol/summoner/v4/summoners/by-name/{summonerName}",
        } as MethodSpec<summonerV4.SummonerDTO | null, { summonerName: string } | [ string ], {}, undefined>,
        getByPUUID: {
            path: "/lol/summoner/v4/summoners/by-puuid/{encryptedPUUID}",
        } as MethodSpec<summonerV4.SummonerDTO, { encryptedPUUID: string } | [ string ], {}, undefined>,
        getBySummonerId: {
            path: "/lol/summoner/v4/summoners/{encryptedSummonerId}",
        } as MethodSpec<summonerV4.SummonerDTO, { encryptedSummonerId: string } | [ string ], {}, undefined>,
    },
    tftLeagueV1: {
        getChallengerLeague: {
            path: "/tft/league/v1/challenger",
        } as MethodSpec<tftLeagueV1.LeagueListDTO, {} | [], {}, undefined>,
        getLeagueEntriesForSummoner: {
            path: "/tft/league/v1/entries/by-summoner/{encryptedSummonerId}",
        } as MethodSpec<tftLeagueV1.LeagueEntryDTO[], { encryptedSummonerId: string } | [ string ], {}, undefined>,
        getLeagueEntries: {
            path: "/tft/league/v1/entries/{tier}/{division}",
        } as MethodSpec<tftLeagueV1.LeagueEntryDTO[], { tier: "DIAMOND" | "PLATINUM" | "GOLD" | "SILVER" | "BRONZE" | "IRON", division: "I" | "II" | "III" | "IV" } | [ "DIAMOND" | "PLATINUM" | "GOLD" | "SILVER" | "BRONZE" | "IRON", "I" | "II" | "III" | "IV" ], { page?: int | null }, undefined>,
        getGrandmasterLeague: {
            path: "/tft/league/v1/grandmaster",
        } as MethodSpec<tftLeagueV1.LeagueListDTO, {} | [], {}, undefined>,
        getLeagueById: {
            path: "/tft/league/v1/leagues/{leagueId}",
        } as MethodSpec<tftLeagueV1.LeagueListDTO | null, { leagueId: string } | [ string ], {}, undefined>,
        getMasterLeague: {
            path: "/tft/league/v1/master",
        } as MethodSpec<tftLeagueV1.LeagueListDTO, {} | [], {}, undefined>,
    },
    tftMatchV1: {
        getMatchIdsByPUUID: {
            path: "/tft/match/v1/matches/by-puuid/{puuid}/ids",
        } as MethodSpec<string[], { puuid: String } | [ String ], { count?: int | null }, undefined>,
        getMatch: {
            path: "/tft/match/v1/matches/{matchId}",
        } as MethodSpec<tftMatchV1.MatchDto | null, { matchId: String } | [ String ], {}, undefined>,
    },
    tftSummonerV1: {
        getByAccountId: {
            path: "/tft/summoner/v1/summoners/by-account/{encryptedAccountId}",
        } as MethodSpec<tftSummonerV1.SummonerDTO, { encryptedAccountId: string } | [ string ], {}, undefined>,
        getBySummonerName: {
            path: "/tft/summoner/v1/summoners/by-name/{summonerName}",
        } as MethodSpec<tftSummonerV1.SummonerDTO | null, { summonerName: string } | [ string ], {}, undefined>,
        getByPUUID: {
            path: "/tft/summoner/v1/summoners/by-puuid/{encryptedPUUID}",
        } as MethodSpec<tftSummonerV1.SummonerDTO, { encryptedPUUID: string } | [ string ], {}, undefined>,
        getBySummonerId: {
            path: "/tft/summoner/v1/summoners/{encryptedSummonerId}",
        } as MethodSpec<tftSummonerV1.SummonerDTO, { encryptedSummonerId: string } | [ string ], {}, undefined>,
    },
    thirdPartyCodeV4: {
        getThirdPartyCodeBySummonerId: {
            path: "/lol/platform/v4/third-party-code/by-summoner/{encryptedSummonerId}",
        } as MethodSpec<String, { encryptedSummonerId: string } | [ string ], {}, undefined>,
    },
    tournamentStubV4: {
        createTournamentCode: {
            path: "/lol/tournament-stub/v4/codes",
        } as MethodSpec<string[], {} | [], { count?: int | null, tournamentId: long }, tournamentStubV4.TournamentCodeParameters>,
        getLobbyEventsByCode: {
            path: "/lol/tournament-stub/v4/lobby-events/by-code/{tournamentCode}",
        } as MethodSpec<tournamentStubV4.LobbyEventDTOWrapper, { tournamentCode: string } | [ string ], {}, undefined>,
        registerProviderData: {
            path: "/lol/tournament-stub/v4/providers",
        } as MethodSpec<int, {} | [], {}, tournamentStubV4.ProviderRegistrationParameters>,
        registerTournament: {
            path: "/lol/tournament-stub/v4/tournaments",
        } as MethodSpec<int, {} | [], {}, tournamentStubV4.TournamentRegistrationParameters>,
    },
    tournamentV4: {
        createTournamentCode: {
            path: "/lol/tournament/v4/codes",
        } as MethodSpec<string[], {} | [], { count?: int | null, tournamentId: long }, tournamentV4.TournamentCodeParameters>,
        getTournamentCode: {
            path: "/lol/tournament/v4/codes/{tournamentCode}",
        } as MethodSpec<tournamentV4.TournamentCodeDTO, { tournamentCode: string } | [ string ], {}, undefined>,
        updateCode: {
            path: "/lol/tournament/v4/codes/{tournamentCode}",
        } as MethodSpec<void, { tournamentCode: string } | [ string ], {}, tournamentV4.TournamentCodeUpdateParameters>,
        getLobbyEventsByCode: {
            path: "/lol/tournament/v4/lobby-events/by-code/{tournamentCode}",
        } as MethodSpec<tournamentV4.LobbyEventDTOWrapper, { tournamentCode: string } | [ string ], {}, undefined>,
        registerProviderData: {
            path: "/lol/tournament/v4/providers",
        } as MethodSpec<int, {} | [], {}, tournamentV4.ProviderRegistrationParameters>,
        registerTournament: {
            path: "/lol/tournament/v4/tournaments",
        } as MethodSpec<int, {} | [], {}, tournamentV4.TournamentRegistrationParameters>,
    },
};
