{
  "openapi": "3.0.0",
  "info": {
    "title": "Riot API",
    "description": "\nOpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily.\n## Download OpenAPI Spec File\nThe following versions of the Riot API spec file are available:\n- `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json))\n- `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json))\n- `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml))\n- `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml))\n- `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json))\n- `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json))\n- `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml))\n- `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml))\n## Source Code\nSource code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome!\n## Automatically Generated\nRebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily.\n***\n",
    "termsOfService": "https://developer.riotgames.com/terms-and-conditions.html",
    "version": "909460d67267a0122544094d93120b50f8d0f5de"
  },
  "servers": [],
  "paths": {},
  "components": {
    "schemas": {
      "match-v4.MatchFrameDto": {
        "type": "object",
        "title": "MatchFrameDto",
        "properties": {
          "participantFrames": {
            "type": "object",
            "x-key": {
              "type": "string",
              "x-type": "String"
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/match-v4.MatchParticipantFrameDto",
              "x-type": "MatchParticipantFrameDto"
            },
            "x-type": "Map[String, MatchParticipantFrameDto]"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/match-v4.MatchEventDto",
              "x-type": "MatchEventDto"
            },
            "x-type": "List[MatchEventDto]"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          }
        },
        "required": [
          "participantFrames",
          "events",
          "timestamp"
        ]
      },
      "match-v4.MatchParticipantFrameDto": {
        "type": "object",
        "title": "MatchParticipantFrameDto",
        "properties": {
          "participantId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "minionsKilled": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "teamScore": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "dominionScore": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "totalGold": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "xp": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "currentGold": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "jungleMinionsKilled": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "participantId",
          "minionsKilled",
          "totalGold",
          "level",
          "xp",
          "currentGold",
          "jungleMinionsKilled"
        ]
      },
      "match-v4.MatchPositionDto": {
        "type": "object",
        "title": "MatchPositionDto",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "y": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "x",
          "y"
        ]
      },
      "match-v4.MatchEventDto": {
        "type": "object",
        "title": "MatchEventDto",
        "properties": {
          "laneType": {
            "type": "string",
            "x-type": "string"
          },
          "skillSlot": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "ascendedType": {
            "type": "string",
            "x-type": "string"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "afterId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "eventType": {
            "type": "string",
            "x-type": "string"
          },
          "type": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "CHAMPION_KILL",
              "WARD_PLACED",
              "WARD_KILL",
              "BUILDING_KILL",
              "ELITE_MONSTER_KILL",
              "ITEM_PURCHASED",
              "ITEM_SOLD",
              "ITEM_DESTROYED",
              "ITEM_UNDO",
              "SKILL_LEVEL_UP",
              "ASCENDED_EVENT",
              "CAPTURE_POINT",
              "PORO_KING_SUMMON"
            ],
            "description": "(Legal values:  CHAMPION_KILL,  WARD_PLACED,  WARD_KILL,  BUILDING_KILL,  ELITE_MONSTER_KILL,  ITEM_PURCHASED,  ITEM_SOLD,  ITEM_DESTROYED,  ITEM_UNDO,  SKILL_LEVEL_UP,  ASCENDED_EVENT,  CAPTURE_POINT,  PORO_KING_SUMMON)"
          },
          "levelUpType": {
            "type": "string",
            "x-type": "string"
          },
          "wardType": {
            "type": "string",
            "x-type": "string"
          },
          "participantId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "towerType": {
            "type": "string",
            "x-type": "string"
          },
          "itemId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "beforeId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "pointCaptured": {
            "type": "string",
            "x-type": "string"
          },
          "monsterType": {
            "type": "string",
            "x-type": "string"
          },
          "monsterSubType": {
            "type": "string",
            "x-type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-enum": "team"
          },
          "position": {
            "$ref": "#/components/schemas/match-v4.MatchPositionDto",
            "x-type": "MatchPositionDto"
          },
          "killerId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "assistingParticipantIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "x-type": "List[int]"
          },
          "buildingType": {
            "type": "string",
            "x-type": "string"
          },
          "victimId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "type",
          "timestamp"
        ]
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "description": "API key in query param.",
        "name": "api_key",
        "in": "query"
      },
      "X-Riot-Token": {
        "type": "apiKey",
        "description": "API key in header.",
        "name": "X-Riot-Token",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "api_key": []
    },
    {
      "X-Riot-Token": []
    }
  ]
}
